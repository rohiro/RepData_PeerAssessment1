survey <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
names(survey)
strsplit(names(survey),split = "wgtp")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
names(gdp)
head(gdp[1:4], 4)
head(gdp[1:4])
head(gdp[1:4], 12)
head(gdp, 12)
head(gdp$X.3, 12)
head(gsub(pattern = ",", replacement = "", x = gdp$X.3),10)
View(gdp)
gdpnc <- gsub(pattern = ",", replacement = "", x = gdp[5:194, 5])
head(gdpnc)
str(gdpnc)
str(as.numeric(gdpnc))
summary(as.numeric(gdpnc)))
summary(as.numeric(gdpnc))
mean(asnumeric(gdpnc))
mean(as.numeric(gdpnc))
countryNames <- gdp$X.2[5:194]
head(countryNames)
grep("*United",countryNames), 2
grep("*United",countryNames)
grep("^United",countryNames)
grep("*United",countryNames)
grep("^United",countryNames)
educate <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
View(educate)
head(gdp[-(1:2),])
names(gdp) <- c("CountryCode", "Ranking", "X.1", "Economy", "million dollars")
View(gdp)
head(gdp[,-X.1])
head(gdp[,-"X.1"])
head(gdp[,X.1])
head(gdp[,-3])
gdp <- gdp[,-3]
gdp <- gdp[-(1:4),]
head(gdp)
gdp <- gdp[,1:4]
head(gdp)
gdp$`million dollars`<- gsub(",", "", gdp$`million dollars`)
head(gdp)
merge(gdp, educate, by = CountryCode)
merge(gdp, educate, by.y = CountryCode)
merge(gdp, educate, by = countryNames)
gdp <- gpd[5:194,]
gdp <- gdp[5:194,]
head(gdp)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
View(gdp)
names(gdp) <- c("CountryCode", "Ranking", "X", "Economy", "Millions")
gdpfinal <- gdp[5:194,]
gdpfinal <- gdp[,-3]
gdpfinal <- gdp[,-(5:9)]
head(gdpfinal)
gdpfinal <- gdp[5:194,]
gdpfinal <- gdpfinal[,-3]
gdpfinal <- gdpfinal[,-(5:9)]
head(gdpfinal)
rownames(gdpfinal) <- 1:190
head(gdpfinal)
names(gdpfinal)
names(educate)
merge(gdpfinal, educate)
head(merge(gdpfinal, educate))
gemerge <- merge(gdpfinal, educate))
gemerge <- merge(gdpfinal, educate)
grepl("Fiscal year end: June 30", gemerge$Special.Notes)
grep("Fiscal year end: June 30", gemerge$Special.Notes)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
str(sampleTimes)
head(sampleTimes)
library(lubridate)
year(sampleTimes[1])
sampleTimes[year(sampleTimes)==2012]
weekdays(sampleTimes[1])
d2012 <- sampleTimes[year(sampleTimes)==2012]
d2012[weekdays(d2012) == "Monday"]
student1 <- read.table("https://s3.amazonaws.com/coursera-uploads/user-1d60d9139f9a76ea9b478b03/975117/asst-3/5576ada07af711e58c3c93a2ccba5840.txt")
head(student1)
names(student1)
View(student1)
student2 <- read.table("https://s3.amazonaws.com/coursera-uploads/user-ba4ceb7ef2f54dd47c669384/975117/asst-3/a6defad07af711e5b647c3fc0c56a0d6.txt")
names(student2)
head(student2)
View(student1)
View(student1)
View(student2)
student3 <- read.table("https://s3.amazonaws.com/coursera-uploads/user-be90d635ab92ff5fe46b3197/975117/asst-3/83680ed07af111e59e52210814ae041c.txt")
View(student3)
student4 <- read.table("https://s3.amazonaws.com/coursera-uploads/user-b89c4b56acadcfe8b1f32833/975117/asst-3/0be2e1207b2611e5b4ef95d87d5c381c.txt")
View(student4)
View(student1)
View(student3)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
help strptime()
help("strptime")
powerConsumption <- read.table("~/Dropbox/C/1DSS/4EDA/household_power_consumption.txt")
powerConsumption <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt")
powerConsumption <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt",sep = ;)
powerConsumption <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt",sep = ";")
View(powerConsumption)
str(powerConsumption)
pC <- powerConsumption
powerConsumptionh <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt",sep = ";", header = TRUE)
View(powerConsumptionh)
pC <- powerConsumptionh
pC$Date <- as.Date(pC$Date)
str(pC)
View(powerConsumptionh)
pC$Time <- strptime(pC$Time)
pC$Time <- strptime(x = pC$Time, format = "%H:%M:%S")
str(pC)
pC[pc$Date == "0017-02-01"||"0017-02-02"]
pC[pC$Date == "0017-02-01"||"0017-02-02"]
pC[pC$Date == "0017-02-01"||pC$Date == "0017-02-02"]
pC[pC$Date == "0017-02-01"||pC$Date == "0017-02-02",:]
pC[pC$Date == "0017-02-01"||pC$Date == "0017-02-02",]
pC[66638:69518,]
pcsubset<-pC[66638:69518,]
View(pcsubset)
pcsubset<-pC[66637:69516,]
View(pcsubset)
library(lubridate)
View(pC)
powerConsumption <- powerConsumptionh
View(powerConsumptionh)
clear(powerConsumptionh)
head(pC)
head(powerConsumption)
dmy(powerConsumption$Date[1])
dmy(powerConsumption$Date[1:20])
pC$Date <- dmy(powerConsumption$Date)
head(pC)
hms(powerConsumption$Time[1:3])
head(hms(powerConsumption$Time))
pC$Time <- hms(powerConsumption$Time))
pC$Time <- hms(powerConsumption$Time)
head(pC)
strptime(pC$Time[1:3], "%H:%M:%S")
pcsubset <- pC66637:69516,]
pcsubset <- pC[66637:69516,]
View(pcsubset)
hist(pcsubset$Global_active_power)
str(pcsubset)
powerConsumptionnew <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt",sep = ";", colClasses = c("Date", "POSIXct", "numeric", "numeric", "numeric", "numeric", "numeric","numeric","factor"))
powerConsumptionnew <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt",sep = ";", colClasses = c("Date", "POSIXct", "numeric", "numeric", "numeric", "numeric", "numeric","numeric","factor"))
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, nrows = 5)
classes <- sapply(sampleData, class)
classes
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("Date","Date", "numeric", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 5)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("Date","Date", "numeric", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 5, sep = ";")
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("Date","character, "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 5, sep = ";")
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("Date","character", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 5, sep = ";")
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 5, sep = ";")
View(sampleData)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 2880, sep = ";", skip = 666636)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric","factor" ), nrows = 2880, sep = ";", skip = 666636, na.strings = c("?"))
str(sampleData)
View(powerConsumption)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", factor" ), nrows = 2880, sep = ";", skip = 66636, na.strings = c("?"))
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", factor"), nrows = 2880, sep = ";", skip = 66636, na.strings = c("?"))
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", header = TRUE, colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "factor" ), nrows = 2880, sep = ";", skip = 66636, na.strings = c("?"))
View(sampleData)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "factor" ), nrows = 2880, sep = ";", skip = 66636, na.strings = c("?"))
View(sampleData)
sampleData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "factor" ), nrows = 2880, sep = ";", skip = 66637, na.strings = c("?"))
sampleNames <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "factor" ), nrows = 1, sep = ";")
sampleNames <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("character"), nrows = 1, sep = ";")
View(sampleNames)
names(sampleData)
names(sampleData) <- sampleNames
names(sampleData)
View(sampleData)
hist(sampleData$Global_active_power)
hist(sampleData$Global_active_power, col = "red")
hist(sampleData$Global_active_power, col = "red", main = "Global Active Power (kilowatts)")
hist(sampleData$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
plot(sampleData$Date, sampleData$Global_active_power)
xyplot(sampleData$Date, sampleData$Global_active_power)
plotxy(sampleData$Date, sampleData$Global_active_power)
help("plot")
View(sampleData)
str(sampleData)
head(c(sampleData$Date, sampleData$Time))
str(c(sampleData$Date, sampleData$Time))
head(sampleData$Date)
head(as.Date(sampleData$Date))
head(as.Date(sampleData$Date, format = "%d/%m/%Y"))
as.Date(sampleData$Date, format = "%d/%m/%Y")
str(as.Date(sampleData$Date, format = "%d/%m/%Y"))
sampleData$Date <- as.Date(sampleData$Date, format = "%d/%m/%Y")
View(sampleData)
head(c(sampleData$Date, sampleData$Time))
head(c(sampleData$Date; sampleData$Time))
c(sampleData$Date[1:10] sampleData$Time[1:10])
c(sampleData$Date[1:10], sampleData$Time[1:10])
View(sampleData)
str(sampleData)
strptime(c(sampleData$Date, sampleData$Time), format = "%Y-%m-%d %H:%M:%S")
head(as.POSIXct(paste(sampleData$Date, sampleData$Time), format="%Y-%m-%d %H:%M:%S"))
head(as.POSIXct(paste(sampleData$Date, sampleData$Time), tz = "GMT", format="%Y-%m-%d %H:%M:%S"))
as.POSIXct(paste(sampleData$Date, sampleData$Time), tz = "GMT", format="%Y-%m-%d %H:%M:%S")
sampleData$Time <- as.POSIXct(paste(sampleData$Date, sampleData$Time), tz = "GMT", format="%Y-%m-%d %H:%M:%S")
clear
#Get the names
pcNames <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("character"), nrows = 1, sep = ";")
#get the data from locations desired
pcData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "factor" ), nrows = 2880, sep = ";", skip = 66637, na.strings = c("?"))
#put in the correct names
names(pcData) <- pcNames
#change date to format of date
pcData$Date <- as.Date(pcData$Date, format = "%d/%m/%Y")
#change time to format POSIXct
pcData$Time <- as.POSIXct(paste(pcData$Date, pcData$Time), tz = "GMT", format="%Y-%m-%d %H:%M:%S")
View(pcData)
str(pcData)
#Plot 1
hist(pcData$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)");
plot(pcData$Time, pcData$Global_active_power)
plot(pcData$Time, pcData$Global_active_power, type = "c")
plot(pcData$Time, pcData$Global_active_power, type = 1)
plot(pcData$Time, pcData$Global_active_power, type = "l")
plot(pcData$Time, pcData$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
#Get the names
pcNames <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("character"), nrows = 1, sep = ";")
#get the data from locations desired
pcData <- read.table("~/Dropbox/C/DSS/4EDA/household_power_consumption.txt", colClasses = c("factor","character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric" ), nrows = 2880, sep = ";", skip = 66637, na.strings = c("?"))
#put in the correct names
names(pcData) <- pcNames
plot(pcData$Time, pcData$Sub_metering_1, type = "n")
is.na(pcData$Sub_metering_1)
pcData$Sub_metering_1[!is.na(pcData$Sub_metering_1)]
str(complete.cases(pcData))
str(pcData[complete.cases(pcData)),])
str(pcData[complete.cases(pcData),])
plot(pcData$Time, pcData$Sub_metering_1)
plot(pcData$Time, pcData$Global_active_power)
plot(pcData$Time, pcData$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
clear
plot.window(xlim = 0)
plot.window(xlim = 0, ylim = 0)
plot.window(xlim = c(0, 10), ylim = 0)
setwd("~/Dropbox/C/DSS/5RR/Project 1/RepData_PeerAssessment1")
filetemp <- unzip('activity.zip')
temp <- read.csv(filetemp)
act <- read.csv(unzip('activity.zip'))
str(act)
as.Date(as.character(act$date[1:5]))
str(as.Date(as.character(act$date[1:5])))
act$dateformatted <- as.Date(as.character(act$date)))
act$dateformatted <- as.Date(as.character(act$date))
View(act)
str(act)
#Read in the data
act <- read.csv(unzip('activity.zip'))
#reformat the dates to date format
act$date <- as.Date(as.character(act$date))
head(act)
tail(act)
hist(x = act$steps)
hist(x = act$date)
hist(x = act$date, breaks = 1)
hist(x = act$date, breaks = range(act$date))
range(act$date)
SumOfSteps <- aggregate(steps, date, act, sum)
SumOfSteps <- aggregate(steps ~ date, act, sum)
hist(SumOfSteps)
View(SumOfSteps)
qplot(SumOfSteps)
library(ggplot2)
qplot(SumOfSteps)
with(SumOfSteps, qplot(date, steps))
qplot(date, steps, data = SumOfSteps, geom = "histogram")
qplot(steps, data = SumOfSteps, color = "green")
qplot(steps, data = SumOfSteps, col = "green")
qplot(steps, data = SumOfSteps, binwidth = 60)
qplot(steps, data = SumOfSteps, binwidth = 40)
qplot(steps, data = SumOfSteps, binwidth = 30)
qplot(steps, data = SumOfSteps, binwidth = 1000)
qplot(steps, data = SumOfSteps, )
qplot(steps, data = SumOfSteps)
#What is mean total number of steps taken per day?
MeanOfSteps <- aggregate(steps ~ date, act, mean)
MedianOfSteps <- aggregate(steps ~ date, act, median)
qplot(steps, data = MeanOfSteps)
qplot(date, steps, data = MeanOfSteps)
qplot(date, steps, data = MeanOfSteps, geom = "line")
qplot(date, steps, data = MedianOfSteps, geom = "line")
qplot(date, steps, data = MedianOfSteps)
View(MedianOfSteps)
MedianOfSteps <- aggregate(steps ~ date, act, median(na.rm = TRUE))
MedianOfSteps <- aggregate(steps ~ date, act, median, na.rm = TRUE)
View(MedianOfSteps)
MedianOfSteps <- aggregate(steps ~ date, act, median, na.rm = TRUE)
View(MedianOfSteps)
act[act$date='2012-10-02']
act[act$date=='2012-10-02',]
qplot(date, steps, data = MeanOfSteps, geom = "line")
qplot(interval, steps,data = ActivityPattern)
ActivityPattern <- aggregate(steps ~ interval, act, mean)
qplot(interval, steps,data = ActivityPattern)
qplot(interval, steps,data = ActivityPattern, geom = "line")
View(ActivityPattern)
ActivityPattern[max(ActivityPattern$steps),interval]
ActivityPattern[max(ActivityPattern$steps),ActivityPattern$interval]
ActivityPattern[max(ActivityPattern$steps),]
max(ActivityPattern$steps)
ActivityPattern[ActivityPattern$steps== max(ActivityPattern$steps),]
ActivityPattern$interval[ActivityPattern$steps== max(ActivityPattern$steps),]
ActivityPattern$interval[ActivityPattern$steps== max(ActivityPattern$steps)]
MaxIntervalAverage <- ActivityPattern$interval[ActivityPattern$steps== max(ActivityPattern$steps)]
ActivityPattern$interval[ActivityPattern$steps== max(ActivityPattern$steps)]
mean(is.na(act$steps))
mean(is.na(act$date))
mean(is.na(act$interval))
testact <- head(act)
testact
testact$steps[1] = 200
testact
is.na(testact$steps)
testact$interval[is.na(testact$steps)]
lookupValues <- testact$interval[is.na(testact$steps)]
ActivityPattern$steps[ActivityPattern$interval== lookupValues[1]]
testact$steps[is.na(testact$steps)][1] ActivityPattern$steps[ActivityPattern$interval== lookupValues[1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== lookupValues[1]]
View(testact)
testact$steps[is.na(testact$steps)][2] <- ActivityPattern$steps[ActivityPattern$interval== lookupValues[2]]
testact$steps[is.na(testact$steps)][3] <- ActivityPattern$steps[ActivityPattern$interval== lookupValues[3]]
View(testact)
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact <- head(act)
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1]
testact$steps[is.na(testact$steps)]
is.na(testact$steps)
testact$steps[is.na(testact$steps)]
testact$interval[is.na(testact$steps)][1]]
testact$interval[is.na(testact$steps)][1]
ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
testact <- head(act, n = 100)
while (mean(is.na(testact$steps) != 0)) {
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
}
testactunprocessed <- head(act, n = 100)
testact <- testactunprocessed
while (mean(is.na(testact$steps) != 0)) {
testact$steps[is.na(testact$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== testact$interval[is.na(testact$steps)][1]]
}
View(testactunprocessed)
ActImputed <- act
while (mean(is.na(ActImputed$steps) != 0)) {
ActImputed$steps[is.na(ActImputed$steps)][1] <- ActivityPattern$steps[ActivityPattern$interval== ActImputed$interval[is.na(ActImputed$steps)][1]]
}
View(ActImputed)
qplot(steps, data = ActImputed)
MeanOfSteps <- aggregate(steps ~ date, ActImputed, mean)
qplot(date, steps, data = MeanOfSteps, geom = "line")
MeanOfStepsImputed <- aggregate(steps ~ date, ActImputed, mean)
qplot(date, steps, data = MeanOfStepsImputed, geom = "line")
#What is mean total number of steps taken per day?
MeanOfSteps <- aggregate(steps ~ date, act, mean)
qplot(date, steps, data = MeanOfSteps, geom = "line")
qplot(date, c(MeanOfSteps$steps, MeanOfStepsImputed$steps))
plot(MeanOfSteps$date, MeanOfSteps$steps)
plot(MeanOfStepsImputed$date, MeanOfStepsImputed$steps)
plot(MeanOfSteps$date, MeanOfSteps$steps, col = "blue")
plot(MeanOfStepsImputed$date, MeanOfStepsImputed$steps, col = )
plot(MeanOfStepsImputed$date, MeanOfStepsImputed$steps, col = 'blue')
point(MeanOfSteps$date, MeanOfSteps$steps, col = 'orange')
points(MeanOfSteps$date, MeanOfSteps$steps, col = 'orange')
plot(MeanOfStepsImputed$date, MeanOfStepsImputed$steps, col = 'blue', pch = 8)
points(MeanOfSteps$date, MeanOfSteps$steps, col = 'orange')
plot(MeanOfStepsImputed$date, MeanOfStepsImputed$steps, col = 'blue', pch = 8, type = "l")
points(MeanOfSteps$date, MeanOfSteps$steps, col = 'orange')
MeanOfStepsImputed <- aggregate(steps ~ date, ActImputed, mean)
qplot(date, steps, data = MeanOfStepsImputed, geom = "line")
qplot(steps, data = MeanOfStepsImputed)
qplot(steps, data = SumOfSteps)
MedianOfStepsImputed <- aggregate(steps ~ date, act, median, na.rm = TRUE)
#median is exclusively zero- data says that people are normally not walking
qplot(date, steps, data = MedianOfStepsImputed)
MeanOfSteps <- aggregate(steps ~ date, ActImputed, mean)
sum(is.na(act$steps))
MedianOfStepsImputed <- aggregate(steps ~ date, act, median, na.rm = TRUE)
View(MedianOfStepsImputed)
MeanOverallSteps <- MeanOfSteps$steps
MeanOverallSteps
MeanOverallSteps <- mean(MeanOfSteps$steps)
MeanOverallSteps
View(MeanOfSteps)
View(SumOfSteps)
OverallAvgSteps <- mean(SumOfSteps$steps)
OverallAvgSteps
OverallMedSteps <- median(SumOfSteps$steps)
OverallMedSteps
SumOfStepsImputed <- aggregate(steps ~ date, ActImputed, sum)
qplot(steps, data = SumOfStepsImputed)
OverallAvgStepsImputed <- mean(SumOfStepsImputed$steps) #10766.19
OverallMedStepsImputed <- median(SumOfStepsImputed$steps)
OverallAvgStepsImputed
OverallMedStepsImputed
ActImputed$weekday <- weekdays(ActImputed$date,abbreviate = TRUE)
View(ActImputed)
ActImputed$weekday[weekdays(ActImputed$date) == 'Saturday' | weekdays(ActImputed$date) == 'Sunday'] <- 'weekend'
ActImputed$weekday[weekdays(ActImputed$date) != 'Saturday' & weekdays(ActImputed$date) != 'Sunday'] <- 'weekday'
str(ActImputed)
ActImputed$weekday <- as.factor(ActImputed$weekday)
str(ActImputed)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "l")
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line")
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "point")
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line")
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = 'blue')
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = weekdays)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = weekday)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = steps)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = interval)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = steps)
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = date)
View(MeanOfStepsImputed)
meanWeekday <- aggregate(steps ~ interval+weekday, data = ActImputed, FUN = mean)
View(meanWeekday)
qplot(x = interval, y = steps, data = meanWeekday, facets = weekday~.)
qplot(x = interval, y = steps, data = meanWeekday, facets = weekday~., geom = "line")
qplot(x = interval, y = steps, data = meanWeekday, facets = weekday~., geom = "line", col = date)
qplot(x = interval, y = steps, data = meanWeekday, facets = weekday~., geom = "line", col = weekday)
ActImputedMeanWeekday <- aggregate(steps ~ interval, data = ActImputed, )
qplot(x = interval, y=steps, data = ActImputed, facets = weekday~., geom = "line", col = date)
meanWeekday <- aggregate(steps ~ interval+weekday, data = ActImputed, FUN = mean)
qplot(x = interval, y = steps, data = meanWeekday, facets = weekday~., geom = "line", col = weekday)
library(knitr)
install.packages('knitr')
library(knitr)
knit2html('Project1.R')
